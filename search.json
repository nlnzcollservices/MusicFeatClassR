[{"path":[]},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Manual.html","id":"description","dir":"Articles","previous_headings":"MusicFeatClassR package","what":"Description","title":"Manual","text":"MusicFeatClassR package aims provide end--end solution music genre classification using Machine Learning (ML) techniques. primary problem addresses automating process music genre classification, involves extracting essential features music datasets training ML classifiers predict genre music. MusicFeatClassR package consists two main separate parts: feature extraction classification.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Manual.html","id":"feature-extraction","dir":"Articles","previous_headings":"MusicFeatClassR package","what":"Feature extraction","title":"Manual","text":"also specific data requirements. music dataset consists Dissemination Information Packages (DIP) extracted Library preservation system based OAIS. Another important file “ies_mms_label.txt,” contains identification numbers class labels extracted library system (Note: Collecting class labels library system yet implemented). preparation, place music dataset “files/mp3” folder “ies_mms_label.txt” file “inst/csv” folder. can find code examples “inst/scripts” folder. Currently, mp3 feature extraction implemented. Please note example dataset contains 10 DIP folders. sufficient classification serves test ensure feature extraction working. initiate feature extraction process, can either run “run_extraction.R” script copy following code snippet. script extract features music dataset, extract text metadata “ie.xml” files (inside DIP), match labels “mms_ies_label.txt” file. create one metadata row music file, bind main data frame, write data frame CSV output file (“extracted_features.csv”), return data frame. Let’s get started. Ensure loaded necessary libraries. , can customize names output input files, contain labels. running main pipeline, specify label_file_path, csv_file_path, filesdir (music packages). Now can initiate pipeline. entire process may take couple hours original dataset (please note example dataset contains 10 albums). process interrupted, script pick last processed DIP folder next run. purpose data analysis, three S3 class methods ‘rpipeline’ developed: ‘print,’ ‘summary,’ ‘plot.’ Currently, ‘draft’ stage developed complete package. (Note: test ‘plot’ S3 method, need load ‘plot.rpipeline’ function memory first, may work well within package.) Note: Currently “plot” load correctly, copied script ","code":"library(xml2) library(dplyr) library(purrr) library(tuneR) library(data.table) library(reshape2) library(MusicFeatClassR) # the package csv_file_name<-\"extracted_features.csv\" label_file<-\"ies_mms_label.txt\" vignettes_dir<-getwd() parent_dir<-dirname(vignettes_dir)  csv_files_path<-file.path(parent_dir, \"inst\",\"csv\") csv_file_path<- file.path(csv_files_path, csv_file_name) label_file_path<-file.path(csv_files_path, label_file) filesdir <- file.path(parent_dir,'files','mp3') mydata<-rpipeline(label_file_path, csv_file_path, filesdir) #> character(0) #> New names: #> • `ie_number...2` -> `ie_number...3` #> • `ie_number...18` -> `ie_number...19` head(mydata) #> $label_file_path #> [1] \"/home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/ies_mms_label.txt\" #>  #> $csv_file_path #> [1] \"/home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/extracted_features.csv\" #>  #> $root_dir #> [1] \"/home/runner/work/MusicFeatClassR/MusicFeatClassR/files/mp3\" #>  #> $feature_data #>   X file_type ie_number...3  rep_number                     file_name duration #> 1 1       mp3     IE1017269 REP74080121 FL74080122_1212219_PM_S_1.mp3  309.912 #> 2 2       mp3     IE1017269 REP74080121 FL74080125_1212219_PM_S_2.mp3  338.808 #>   sample_rate num_channels amplitude         xml_title #> 1       48000     14875776     14070 The Kini Quartet. #> 2       48000     16262784     20921 The Kini Quartet. #>                          xml_creators         xml_type #> 1 Kini Quartet.||Raggett, Margarette. Sound Recordings #> 2 Kini Quartet.||Raggett, Margarette. Sound Recordings #>                            xml_publisher xml_date xml_language xml_identifier #> 1 Auckland, N.Z. :               Zodiac,   [1967]          mao      IE1017269 #> 2 Auckland, N.Z. :               Zodiac,   [1967]          mao      IE1017269 #>   xml_bibliographicCitation          mms ie_number...19 label_code #> 1         The Kini Quartet. 9.912122e+15      IE1017269         pp #> 2         The Kini Quartet. 9.912122e+15      IE1017269         pp #>          label1        label2 label3 label4 label5 #> 1 Popular music Songs, Māori.     NA     NA     NA #> 2 Popular music Songs, Māori.     NA     NA     NA print(mydata) #> Custom rpipeline object #> Label File Path: /home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/ies_mms_label.txt  #> CSV File Path: /home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/extracted_features.csv  #> Root Directory: /home/runner/work/MusicFeatClassR/MusicFeatClassR/files/mp3  #> Feature Data Summary: #>   X file_type ie_number...3  rep_number                     file_name duration #> 1 1       mp3     IE1017269 REP74080121 FL74080122_1212219_PM_S_1.mp3  309.912 #> 2 2       mp3     IE1017269 REP74080121 FL74080125_1212219_PM_S_2.mp3  338.808 #>   sample_rate num_channels amplitude         xml_title #> 1       48000     14875776     14070 The Kini Quartet. #> 2       48000     16262784     20921 The Kini Quartet. #>                          xml_creators         xml_type #> 1 Kini Quartet.||Raggett, Margarette. Sound Recordings #> 2 Kini Quartet.||Raggett, Margarette. Sound Recordings #>                            xml_publisher xml_date xml_language xml_identifier #> 1 Auckland, N.Z. :               Zodiac,   [1967]          mao      IE1017269 #> 2 Auckland, N.Z. :               Zodiac,   [1967]          mao      IE1017269 #>   xml_bibliographicCitation          mms ie_number...19 label_code #> 1         The Kini Quartet. 9.912122e+15      IE1017269         pp #> 2         The Kini Quartet. 9.912122e+15      IE1017269         pp #>          label1        label2 label3 label4 label5 #> 1 Popular music Songs, Māori.     NA     NA     NA #> 2 Popular music Songs, Māori.     NA     NA     NA summary(mydata) #> Summary of rpipeline object #> Label File Path: /home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/ies_mms_label.txt  #> CSV File Path: /home/runner/work/MusicFeatClassR/MusicFeatClassR/inst/csv/extracted_features.csv  #> Root Directory: /home/runner/work/MusicFeatClassR/MusicFeatClassR/files/mp3  #> Feature Data Summary: #>        X         file_type         ie_number...3       rep_number        #>  Min.   :1.00   Length:2           Length:2           Length:2           #>  1st Qu.:1.25   Class :character   Class :character   Class :character   #>  Median :1.50   Mode  :character   Mode  :character   Mode  :character   #>  Mean   :1.50                                                            #>  3rd Qu.:1.75                                                            #>  Max.   :2.00                                                            #>   file_name            duration      sample_rate     num_channels      #>  Length:2           Min.   :309.9   Min.   :48000   Min.   :14875776   #>  Class :character   1st Qu.:317.1   1st Qu.:48000   1st Qu.:15222528   #>  Mode  :character   Median :324.4   Median :48000   Median :15569280   #>                     Mean   :324.4   Mean   :48000   Mean   :15569280   #>                     3rd Qu.:331.6   3rd Qu.:48000   3rd Qu.:15916032   #>                     Max.   :338.8   Max.   :48000   Max.   :16262784   #>    amplitude      xml_title         xml_creators         xml_type         #>  Min.   :14070   Length:2           Length:2           Length:2           #>  1st Qu.:15783   Class :character   Class :character   Class :character   #>  Median :17496   Mode  :character   Mode  :character   Mode  :character   #>  Mean   :17496                                                            #>  3rd Qu.:19208                                                            #>  Max.   :20921                                                            #>  xml_publisher        xml_date         xml_language       xml_identifier     #>  Length:2           Length:2           Length:2           Length:2           #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>  xml_bibliographicCitation      mms            ie_number...19     #>  Length:2                  Min.   :9.912e+15   Length:2           #>  Class :character          1st Qu.:9.912e+15   Class :character   #>  Mode  :character          Median :9.912e+15   Mode  :character   #>                            Mean   :9.912e+15                      #>                            3rd Qu.:9.912e+15                      #>                            Max.   :9.912e+15                      #>   label_code           label1             label2           label3        #>  Length:2           Length:2           Length:2           Mode:logical   #>  Class :character   Class :character   Class :character   NA's:2         #>  Mode  :character   Mode  :character   Mode  :character                  #>                                                                          #>                                                                          #>                                                                          #>   label4         label5        #>  Mode:logical   Mode:logical   #>  NA's:2         NA's:2         #>                                #>                                #>                                #> plot(mydata) #> Warning in cor(df_numeric): the standard deviation is zero"},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Manual.html","id":"classification","dir":"Articles","previous_headings":"MusicFeatClassR package","what":"Classification","title":"Manual","text":"collected features dataset, can proceed next stage - Machine Learning (ML) classification. source classification dataframe built “extracted_features.csv” file; however, since example music dataset relatively small, please consider using “extracted_features_original.csv” file, contains 50,000 rows data. addition Random Forest, considered one best classifiers, package also includes Naive Bayes, Support Vector Machine, Logistic Regression methods. can call specific method replacing “RandomForest” “LogisticRegression,” “NaiveBayes,” “SupportVectorMachine.” initiate classification process, can use “classify.R” code “inst/scripts” directory copy code snippets. Class result also print summary methods","code":"library(randomForest) library(caret) library(data.table) library(stringr) library(e1071) library(nnet) library(Rcpp) library(MusicFeatClassR) csv_file_name<-\"extracted_features_original.csv\" vignettes_dir<-getwd() parent_dir<-dirname(vignettes_dir) csv_files_path<-file.path(parent_dir, \"inst\",\"csv\") csv_file_path<-file.path(csv_files_path, csv_file_name) feature_data<-read.csv(csv_file_path) result <- train_classifier(feature_data, target_variable = \"label_code\",classif = \"RandomForest\") print(result) #> $accuracy #> [1] 0.7091398 #>  #> $confusion_matrix #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  bl  cy  df  fm  jz  pp  rc  sg  uu  zz #>         bl  11   0   0   0   0   1   0   0   0   1 #>         cy   0  12   0   0   0   0   0   0   0   1 #>         df   0   1  37   0   2   4   3   0   0  11 #>         fm   0   1   1  36   1   6   5   4   2   9 #>         jz   0   0   8   1  42   0   3   2   0   5 #>         pp   0   4   4   2   0 122  23   9   0  14 #>         rc   0   3  15   2  18  35 421   7   6  81 #>         sg   0   4   1   1   0   5   4   7   3   2 #>         uu   0   0   0   0   0   0   0   1   2   0 #>         zz   2   2  21   3  11  51 124   7   4 629 #>  #> Overall Statistics #>                                            #>                Accuracy : 0.7091           #>                  95% CI : (0.6879, 0.7297) #>     No Information Rate : 0.4048           #>     P-Value [Acc > NIR] : < 2.2e-16        #>                                            #>                   Kappa : 0.5842           #>                                            #>  Mcnemar's Test P-Value : NA               #>  #> Statistics by Class: #>  #>                      Class: bl Class: cy Class: df Class: fm Class: jz #> Sensitivity           0.846154  0.444444   0.42529   0.80000   0.56757 #> Specificity           0.998917  0.999454   0.98816   0.98402   0.98936 #> Pos Pred Value        0.846154  0.923077   0.63793   0.55385   0.68852 #> Neg Pred Value        0.998917  0.991879   0.97225   0.99499   0.98221 #> Prevalence            0.006989  0.014516   0.04677   0.02419   0.03978 #> Detection Rate        0.005914  0.006452   0.01989   0.01935   0.02258 #> Detection Prevalence  0.006989  0.006989   0.03118   0.03495   0.03280 #> Balanced Accuracy     0.922536  0.721949   0.70672   0.89201   0.77846 #>                      Class: pp Class: rc Class: sg Class: uu Class: zz #> Sensitivity            0.54464    0.7221  0.189189  0.117647    0.8353 #> Specificity            0.96577    0.8692  0.989029  0.999457    0.7967 #> Pos Pred Value         0.68539    0.7160  0.259259  0.666667    0.7365 #> Neg Pred Value         0.93936    0.8726  0.983633  0.991922    0.8767 #> Prevalence             0.12043    0.3134  0.019892  0.009140    0.4048 #> Detection Rate         0.06559    0.2263  0.003763  0.001075    0.3382 #> Detection Prevalence   0.09570    0.3161  0.014516  0.001613    0.4591 #> Balanced Accuracy      0.75521    0.7957  0.589109  0.558552    0.8160 #>  #> $trained_model #>  #> Call: #>  randomForest(formula = train_target ~ ., data = train_data)  #>                Type of random forest: classification #>                      Number of trees: 500 #> No. of variables tried at each split: 2 #>  #>         OOB estimate of  error rate: 26.66% #> Confusion matrix: #>    bl cy df fm  jz  pp   rc sg uu   zz class.error #> bl 23  0  0  0   0   1    3  1  0    4   0.2812500 #> cy  0 37  0  0   1   6    7  3  0    9   0.4126984 #> df  1  0 99  1   3  12   44  0  0   44   0.5147059 #> fm  0  0  2 71   3   8    8  1  1   14   0.3425926 #> jz  0  0  0  2 132   3   17  0  0   21   0.2457143 #> pp  1  2 14  8   6 314   69 11  1   97   0.3996176 #> rc  2  5 15  5  13  54 1004 10  6  249   0.2633896 #> sg  0  5  0  3   1  16   26 20  1   17   0.7752809 #> uu  0  0  0  1   1   6   15  0  0   18   1.0000000 #> zz  2  5 16  6  12  41  171  6  4 1494   0.1496870 #>  #> attr(,\"class\") #> [1] \"train_classifier\" summary(result) #>                  Length Class                Mode    #> accuracy          1     -none-               numeric #> confusion_matrix  6     confusionMatrix      list    #> trained_model    19     randomForest.formula list plot(result)"},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Manual.html","id":"rcpp-code","dir":"Articles","previous_headings":"MusicFeatClassR package > Classification","what":"RCPP code","title":"Manual","text":"package also contains c++ method build additional statistics using confusion matrix results: Matthews correlation coefficient (MCC) F1-score. original script “src/get_metrics.cpp”. taking input table derived confusion matrix. See example .","code":"#sourceCpp(parent_dir,\"src\",\"get_metrics.cpp\") classificationMetrics(result$confusion_matrix$table) #>  F1_Score       MCC  #> 0.5760850 0.5514855"},{"path":[]},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Testing_plan.html","id":"automated-tests","dir":"Articles","previous_headings":"Testing Plan","what":"Automated Tests","title":"Testing plan","text":"Set automated unit tests included package.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Testing_plan.html","id":"testthat","dir":"Articles","previous_headings":"Testing Plan","what":"testthat","title":"Testing plan","text":"unittests implemented using testthat framework. run tests, load MusicFeatClassR, use test_dir() test_file() functions provided testthat. example: execute tests. Note: warnings related packages.","code":"library(MusicFeatClassR) library(testthat) current_dir<-getwd() root_dir<-dirname(current_dir) test_dir(file.path(root_dir,\"tests\")) #> ✔ | F W  S  OK | Context #>  #> ⠏ |          0 | classifier #> randomForest 4.7-1.1 #> Type rfNews() to see new features/changes/bug fixes. #> Loading required package: ggplot2 #>  #> Attaching package: 'ggplot2' #> The following object is masked from 'package:randomForest': #>  #>     margin #> Loading required package: lattice #>  #> ⠋ |          1 | classifier                                                      #> ⠧ |          8 | classifier                                                      #> ✔ |          9 | classifier [4.2s] #>  #> ⠏ |          0 | extract_audio_features                                          #> ⠋ |          1 | extract_audio_features                                          #> ✔ |          9 | extract_audio_features [4.8s] #>  #> ⠏ |          0 | extraction_routine #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:data.table': #>  #>     between, first, last #> The following object is masked from 'package:randomForest': #>  #>     combine #> The following object is masked from 'package:testthat': #>  #>     matches #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: 'purrr' #> The following object is masked from 'package:data.table': #>  #>     transpose #> The following object is masked from 'package:caret': #>  #>     lift #> The following object is masked from 'package:testthat': #>  #>     is_null #> [1] \"IE1005520\" #> [1] \"IE1005520\" #> [1] \"IE number\" #> [1] \"REP74107552\" #> [1] \"/home/runner/work/MusicFeatClassR/MusicFeatClassR/tests/music/IE1005520/REP74107552/FL74107553_1294987_PM_S_2.mp3\" #> [2] \"/home/runner/work/MusicFeatClassR/MusicFeatClassR/tests/music/IE1005520/REP74107552/FL74107554_1294987_PM_S_1.mp3\" #>    duration sample_rate num_channels amplitude #> 1: 1017.624       48000     48845952     29338 #>    duration sample_rate num_channels amplitude #> 1: 1017.624       48000     48845952     29338 #>   file_type ie_number  rep_number                     file_name #> 1       mp3 IE1005520 REP74107552 FL74107553_1294987_PM_S_2.mp3 #>                                             xml_title #> 1 Māoritanga /               by the Maniapoto Voices. #>                                                                                                                   xml_creators #> 1 Maniapoto Voices.||Deller, Hinerangi.||Bradfield, Johnny.||Morgan, Chuck,\\n    1952-2018.||Penney, Bert.||Herewini, William. #>           xml_type                          xml_publisher xml_date xml_language #> 1 Sound Recordings Auckland, N.Z. :               Zodiac,  [1966?]          mao #>   xml_identifier xml_bibliographicCitation #> 1      IE1005520                Māoritanga #> New names: #> • `ie_number` -> `ie_number...2` #> • `ie_number` -> `ie_number...18` #>    duration sample_rate num_channels amplitude #> 1:  916.296       48000     43982208     24800 #>    duration sample_rate num_channels amplitude #> 1:  916.296       48000     43982208     24800 #>   file_type ie_number  rep_number                     file_name #> 1       mp3 IE1005520 REP74107552 FL74107554_1294987_PM_S_1.mp3 #>                                             xml_title #> 1 Māoritanga /               by the Maniapoto Voices. #>                                                                                                                   xml_creators #> 1 Maniapoto Voices.||Deller, Hinerangi.||Bradfield, Johnny.||Morgan, Chuck,\\n    1952-2018.||Penney, Bert.||Herewini, William. #>           xml_type                          xml_publisher xml_date xml_language #> 1 Sound Recordings Auckland, N.Z. :               Zodiac,  [1966?]          mao #>   xml_identifier xml_bibliographicCitation #> 1      IE1005520                Māoritanga #> New names: #> • `ie_number` -> `ie_number...2` #> • `ie_number` -> `ie_number...18` #>  #> ⠋ |          1 | extraction_routine                                              #> ✔ |          3 | extraction_routine [7.8s] #>  #> ⠏ |          0 | metadata_extraction                                             #> ✔ |         18 | metadata_extraction #>  #> ══ Results ═════════════════════════════════════════════════════════════════════ #> Duration: 16.9 s #>  #> [ FAIL 0 | WARN 0 | SKIP 0 | PASS 39 ] #>  #> You rock!"},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Testing_plan.html","id":"interpreting-the-results","dir":"Articles","previous_headings":"Testing Plan","what":"Interpreting the Results","title":"Testing plan","text":"running tests, testthat give summary test results, tests passed failed.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Testing_plan.html","id":"writing-new-tests","dir":"Articles","previous_headings":"Testing Plan","what":"Writing New Tests","title":"Testing plan","text":"New tests placed “tests” folder.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/articles/Testing_plan.html","id":"continuous-integration","dir":"Articles","previous_headings":"Testing Plan","what":"Continuous Integration","title":"Testing plan","text":"Run tests whenever changes made package.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Svetlana Koroteeva. Maintainer.","code":""},{"path":"https://nlnzcollservices.github.io/MusicFeatClassR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koroteeva S (2023). MusicFeatClassR: Music Genre Classifier. R package version 0.1.0, https://nlnzcollservices.github.io/MusicFeatClassR/.","code":"@Manual{,   title = {MusicFeatClassR: Music Genre Classifier},   author = {Svetlana Koroteeva},   year = {2023},   note = {R package version 0.1.0},   url = {https://nlnzcollservices.github.io/MusicFeatClassR/}, }"}]
